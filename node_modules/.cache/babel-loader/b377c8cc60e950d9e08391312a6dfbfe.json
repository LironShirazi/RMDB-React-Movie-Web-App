{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\[FreeCourseSite.com] Udemy - Beginner React (2019). Create a Movie Web App\\\\React RMDB\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport * as api_config from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.plocalStorage.getItem(`${this.props.match.params.movieId}`);\n      this.setState(...state);\n    } else {\n      this.setState({\n        loading: true\n      }); //First fetching the movie\n\n      const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}?api_key=${api_config.API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems(endpoint) {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      if (result.status_code) {\n        this.setState({\n          loading: false\n        });\n      } else {\n        this.setState({\n          movie: result\n        }, () => {\n          //then fetching actors in the setstate callback function\n          const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${api_config.API_KEY}`;\n          fetch(endpoint).then(result => result.json()).then(result => {\n            const directors = result.crew.filter(member => member.job === 'Director');\n            this.setState({\n              actors: result.cast,\n              directors: directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\n            });\n          });\n        });\n      }\n    }).catch(error => console.error('Error:', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      movie: this.props.location.movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })) : null, this.state.actors ? React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: 'Actors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.actors.map((element, i) => {\n      return React.createElement(Actor, {\n        key: i,\n        actor: element,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }))) : null, !this.state.actors && !this.state.loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"No Movie Found!\") : null, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/liron/Desktop/לימודים/[FreeCourseSite.com] Udemy - Beginner React (2019). Create a Movie Web App/React RMDB/src/components/Movie/Movie.js"],"names":["React","Component","api_config","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","componentDidMount","localStorage","getItem","props","match","params","movieId","JSON","plocalStorage","setState","endpoint","API_URL","API_KEY","fetchItems","fetch","then","result","json","status_code","crew","filter","member","job","cast","setItem","stringify","catch","error","console","render","location","movieName","runtime","budget","revenue","map","element","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as api_config from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n class Movie extends Component {\r\n     state = {\r\n         movie: null,\r\n         actors: null,\r\n         directors: [],\r\n         loading: false\r\n     }\r\n\r\n     componentDidMount() {\r\n         if(localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n            const state = JSON.plocalStorage.getItem(`${this.props.match.params.movieId}`);\r\n            this.setState(...state);\r\n         } else {\r\n             this.setState({ loading: true });\r\n             //First fetching the movie\r\n             const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}?api_key=${api_config.API_KEY}&language=en-US`;\r\n             this.fetchItems(endpoint);\r\n         }\r\n    }\r\n\r\n    fetchItems(endpoint) {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n          \r\n        \r\n        if(result.status_code) {\r\n            this.setState({ loading: false});\r\n        } else {\r\n            this.setState({ movie: result }, () => {\r\n            //then fetching actors in the setstate callback function\r\n            const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${api_config.API_KEY}`\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                const directors = result.crew.filter( member => member.job === 'Director');\r\n                this.setState({\r\n                    actors: result.cast,\r\n                    directors: directors,\r\n                    loading: false\r\n                }, () => {\r\n                    localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n                })\r\n              }) \r\n            });\r\n          }\r\n        })\r\n\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ? \r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue}/> \r\n\r\n                    </div>\r\n                    :null }\r\n                {this.state.actors ? \r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                        {this.state.actors.map((element, i) => {\r\n                            return <Actor key={i} actor={element}/>\r\n                        })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                    :null }\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner/> : null}\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}