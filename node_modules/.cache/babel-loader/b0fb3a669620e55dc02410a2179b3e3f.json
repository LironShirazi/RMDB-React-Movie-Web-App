{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\[FreeCourseSite.com] Udemy - Beginner React (2019). Create a Movie Web App\\\\React RMDB\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport * as api_config from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //First fetching the movie\n\n    const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}?api_key=${api_config.API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems(endpoint) {\n    fetchItems(endpoint).then(result => result.json()).then(result => {\n      if (result.status_code) {\n        this.setState({\n          loading: false\n        });\n      } else {\n        this.setState({\n          movie: result\n        }, () => {\n          //then fetching actors in the setstate callback function\n          const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${api_config.API_KEY}`;\n          fetch(endpoint).then(result => result.json()).then(result => {\n            const directors = result.crew.filter(member => member.job === 'Director');\n            this.setState({\n              actors: result.cast,\n              directors: directors,\n              loading: false\n            });\n          });\n        });\n      }\n    }).catch(error => console.error('Error:', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(FourColGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/liron/Desktop/לימודים/[FreeCourseSite.com] Udemy - Beginner React (2019). Create a Movie Web App/React RMDB/src/components/Movie/Movie.js"],"names":["React","Component","api_config","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","componentDidMount","setState","endpoint","API_URL","props","match","params","movieId","API_KEY","fetchItems","then","result","json","status_code","fetch","crew","filter","member","job","cast","catch","error","console","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEC,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADkB;AAAA;;AAQ1BC,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAd,EADiB,CAEjB;;AACA,UAAMG,QAAQ,GAAI,GAAEf,UAAU,CAACgB,OAAQ,SAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,YAAWpB,UAAU,CAACqB,OAAQ,iBAA7G;AACA,SAAKC,UAAL,CAAgBP,QAAhB;AACH;;AAEDO,EAAAA,UAAU,CAACP,QAAD,EAAW;AACjBO,IAAAA,UAAU,CAACP,QAAD,CAAV,CACCQ,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AAGhB,UAAGA,MAAM,CAACE,WAAV,EAAuB;AACnB,aAAKZ,QAAL,CAAc;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH,OAFD,MAEO;AACH,aAAKE,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEe;AAAT,SAAd,EAAiC,MAAM;AACvC;AACA,gBAAMT,QAAQ,GAAI,GAAEf,UAAU,CAACgB,OAAQ,SAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,oBAAmBpB,UAAU,CAACqB,OAAQ,EAArH;AACAM,UAAAA,KAAK,CAACZ,QAAD,CAAL,CACCQ,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACZ,kBAAMb,SAAS,GAAGa,MAAM,CAACI,IAAP,CAAYC,MAAZ,CAAoBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UAA7C,CAAlB;AACA,iBAAKjB,QAAL,CAAc;AACVJ,cAAAA,MAAM,EAAEc,MAAM,CAACQ,IADL;AAEVrB,cAAAA,SAAS,EAAEA,SAFD;AAGVC,cAAAA,OAAO,EAAE;AAHC,aAAd;AAKD,WATH;AAUC,SAbD;AAcD;AACF,KAvBD,EAyBCqB,KAzBD,CAyBOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAzBhB;AA0BH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AAtD0B;;AAyD/B,eAAe7B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport * as api_config from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n class Movie extends Component {\r\n     state = {\r\n         movie: null,\r\n         actors: null,\r\n         directors: [],\r\n         loading: false\r\n     }\r\n\r\n     componentDidMount() {\r\n        this.setState({ loading: true });\r\n        //First fetching the movie\r\n        const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}?api_key=${api_config.API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems(endpoint) {\r\n        fetchItems(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n          \r\n        \r\n        if(result.status_code) {\r\n            this.setState({ loading: false});\r\n        } else {\r\n            this.setState({ movie: result }, () => {\r\n            //then fetching actors in the setstate callback function\r\n            const endpoint = `${api_config.API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${api_config.API_KEY}`\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                const directors = result.crew.filter( member => member.job === 'Director');\r\n                this.setState({\r\n                    actors: result.cast,\r\n                    directors: directors,\r\n                    loading: false\r\n                })\r\n              }) \r\n            });\r\n          }\r\n        })\r\n\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                <Navigation />\r\n                <MovieInfo />\r\n                <MovieInfoBar />\r\n                <FourColGrid />\r\n                <Spinner />\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}